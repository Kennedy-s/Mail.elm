var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Tick':
				return model.paused ? {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none} : {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{time: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Paused':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{paused: true}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Resumed':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{paused: false}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{reset: true}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$initialModel = {time: _elm_lang$core$Time$second, paused: false, resumed: false, reset: false};
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$Model = F4(
	function (a, b, c, d) {
		return {time: a, paused: b, resumed: c, reset: d};
	});
var _user$project$Main$Reset = {ctor: 'Reset'};
var _user$project$Main$Resumed = {ctor: 'Resumed'};
var _user$project$Main$Paused = {ctor: 'Paused'};
var _user$project$Main$view = function (model) {
	var angle = _elm_lang$core$Basics$turns(
		_elm_lang$core$Time$inMinutes(model.time));
	var handX = _elm_lang$core$Basics$toString(
		50 + (40 * _elm_lang$core$Basics$cos(angle)));
	var handY = _elm_lang$core$Basics$toString(
		50 + (40 * _elm_lang$core$Basics$sin(angle)));
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$svg$Svg$svg,
				{
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 100 100'),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$width('300px'),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$circle,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$cx('50'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$cy('50'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$r('45'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$fill('#650000'),
										_1: {ctor: '[]'}
									}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$line,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$x1('50'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$y1('50'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$x2(handX),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$y2(handY),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$stroke('..'),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$line,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$x1('50'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$y1('50'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$x2(handX),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$y2(handY),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$stroke('..'),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$svg$Svg$line,
									{
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$x1('50'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$y1('50'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$x2(handX),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$y2(handY),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$stroke('blue'),
														_1: {
															ctor: '::',
															_0: _elm_lang$svg$Svg_Attributes$strokeWidth('1'),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}
						}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Paused),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$svg$Svg$text('Pause'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Resumed),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg$text('Resume'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Reset),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg$text('Reset'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$Tick = function (a) {
	return {ctor: 'Tick', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	return A2(_elm_lang$core$Time$every, _elm_lang$core$Time$second, _user$project$Main$Tick);
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
