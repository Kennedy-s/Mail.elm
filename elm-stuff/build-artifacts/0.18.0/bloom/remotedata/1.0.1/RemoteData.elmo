var _bloom$remotedata$RemoteData$isNotAsked = function (data) {
	var _p0 = data;
	if (_p0.ctor === 'NotAsked') {
		return true;
	} else {
		return false;
	}
};
var _bloom$remotedata$RemoteData$isLoading = function (data) {
	var _p1 = data;
	if (_p1.ctor === 'Loading') {
		return true;
	} else {
		return false;
	}
};
var _bloom$remotedata$RemoteData$isFailure = function (data) {
	var _p2 = data;
	if (_p2.ctor === 'Failure') {
		return true;
	} else {
		return false;
	}
};
var _bloom$remotedata$RemoteData$isSuccess = function (data) {
	var _p3 = data;
	if (_p3.ctor === 'Success') {
		return true;
	} else {
		return false;
	}
};
var _bloom$remotedata$RemoteData$withDefault = F2(
	function ($default, data) {
		var _p4 = data;
		if (_p4.ctor === 'Success') {
			return _p4._0;
		} else {
			return $default;
		}
	});
var _bloom$remotedata$RemoteData$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _bloom$remotedata$RemoteData$pure = _bloom$remotedata$RemoteData$Success;
var _bloom$remotedata$RemoteData$prism = {
	reverseGet: _bloom$remotedata$RemoteData$Success,
	getOption: function (data) {
		var _p5 = data;
		if (_p5.ctor === 'Success') {
			return _elm_lang$core$Maybe$Just(_p5._0);
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	}
};
var _bloom$remotedata$RemoteData$Failure = function (a) {
	return {ctor: 'Failure', _0: a};
};
var _bloom$remotedata$RemoteData$fromTask = function (t) {
	return A2(
		_elm_lang$core$Task$onError,
		function (e) {
			return _elm_lang$core$Task$succeed(
				_bloom$remotedata$RemoteData$Failure(e));
		},
		A2(
			_elm_lang$core$Task$map,
			function (x) {
				return _bloom$remotedata$RemoteData$Success(x);
			},
			t));
};
var _bloom$remotedata$RemoteData$fromResult = function (result) {
	var _p6 = result;
	if (_p6.ctor === 'Err') {
		return _bloom$remotedata$RemoteData$Failure(_p6._0);
	} else {
		return _bloom$remotedata$RemoteData$Success(_p6._0);
	}
};
var _bloom$remotedata$RemoteData$asCmd = function (task) {
	return A2(_elm_lang$core$Task$attempt, _bloom$remotedata$RemoteData$fromResult, task);
};
var _bloom$remotedata$RemoteData$Loading = {ctor: 'Loading'};
var _bloom$remotedata$RemoteData$NotAsked = {ctor: 'NotAsked'};
var _bloom$remotedata$RemoteData$map = F2(
	function (f, data) {
		var _p7 = data;
		switch (_p7.ctor) {
			case 'Success':
				return _bloom$remotedata$RemoteData$Success(
					f(_p7._0));
			case 'Loading':
				return _bloom$remotedata$RemoteData$Loading;
			case 'NotAsked':
				return _bloom$remotedata$RemoteData$NotAsked;
			default:
				return _bloom$remotedata$RemoteData$Failure(_p7._0);
		}
	});
var _bloom$remotedata$RemoteData$toMaybe = function (_p8) {
	return A2(
		_bloom$remotedata$RemoteData$withDefault,
		_elm_lang$core$Maybe$Nothing,
		A2(_bloom$remotedata$RemoteData$map, _elm_lang$core$Maybe$Just, _p8));
};
var _bloom$remotedata$RemoteData_ops = _bloom$remotedata$RemoteData_ops || {};
_bloom$remotedata$RemoteData_ops['<$>'] = _bloom$remotedata$RemoteData$map;
var _bloom$remotedata$RemoteData$mapFailure = F2(
	function (f, data) {
		var _p9 = data;
		switch (_p9.ctor) {
			case 'Success':
				return _bloom$remotedata$RemoteData$Success(_p9._0);
			case 'Failure':
				return _bloom$remotedata$RemoteData$Failure(
					f(_p9._0));
			case 'Loading':
				return _bloom$remotedata$RemoteData$Loading;
			default:
				return _bloom$remotedata$RemoteData$NotAsked;
		}
	});
var _bloom$remotedata$RemoteData$mapBoth = F3(
	function (successFn, errorFn, data) {
		var _p10 = data;
		switch (_p10.ctor) {
			case 'Success':
				return _bloom$remotedata$RemoteData$Success(
					successFn(_p10._0));
			case 'Failure':
				return _bloom$remotedata$RemoteData$Failure(
					errorFn(_p10._0));
			case 'Loading':
				return _bloom$remotedata$RemoteData$Loading;
			default:
				return _bloom$remotedata$RemoteData$NotAsked;
		}
	});
var _bloom$remotedata$RemoteData$andThen = F2(
	function (data, f) {
		var _p11 = data;
		switch (_p11.ctor) {
			case 'Success':
				return f(_p11._0);
			case 'Failure':
				return _bloom$remotedata$RemoteData$Failure(_p11._0);
			case 'NotAsked':
				return _bloom$remotedata$RemoteData$NotAsked;
			default:
				return _bloom$remotedata$RemoteData$Loading;
		}
	});
var _bloom$remotedata$RemoteData$apply = F2(
	function (wrappedFunction, wrappedValue) {
		var _p12 = {ctor: '_Tuple2', _0: wrappedFunction, _1: wrappedValue};
		switch (_p12._0.ctor) {
			case 'Success':
				switch (_p12._1.ctor) {
					case 'Success':
						return _bloom$remotedata$RemoteData$Success(
							_p12._0._0(_p12._1._0));
					case 'Loading':
						return _bloom$remotedata$RemoteData$Loading;
					case 'NotAsked':
						return _bloom$remotedata$RemoteData$NotAsked;
					default:
						return _bloom$remotedata$RemoteData$Failure(_p12._1._0);
				}
			case 'Loading':
				return _bloom$remotedata$RemoteData$Loading;
			case 'NotAsked':
				return _bloom$remotedata$RemoteData$NotAsked;
			default:
				return _bloom$remotedata$RemoteData$Failure(_p12._0._0);
		}
	});
var _bloom$remotedata$RemoteData_ops = _bloom$remotedata$RemoteData_ops || {};
_bloom$remotedata$RemoteData_ops['<*>'] = _bloom$remotedata$RemoteData$apply;
var _bloom$remotedata$RemoteData$append = F2(
	function (a, b) {
		return A2(
			_bloom$remotedata$RemoteData_ops['<*>'],
			A2(
				_bloom$remotedata$RemoteData_ops['<$>'],
				F2(
					function (v0, v1) {
						return {ctor: '_Tuple2', _0: v0, _1: v1};
					}),
				a),
			b);
	});
var _bloom$remotedata$RemoteData$update = F2(
	function (f, remoteData) {
		var _p13 = remoteData;
		switch (_p13.ctor) {
			case 'Success':
				var _p14 = f(_p13._0);
				var first = _p14._0;
				var second = _p14._1;
				return {
					ctor: '_Tuple2',
					_0: _bloom$remotedata$RemoteData$Success(first),
					_1: second
				};
			case 'NotAsked':
				return {ctor: '_Tuple2', _0: _bloom$remotedata$RemoteData$NotAsked, _1: _elm_lang$core$Platform_Cmd$none};
			case 'Loading':
				return {ctor: '_Tuple2', _0: _bloom$remotedata$RemoteData$Loading, _1: _elm_lang$core$Platform_Cmd$none};
			default:
				return {
					ctor: '_Tuple2',
					_0: _bloom$remotedata$RemoteData$Failure(_p13._0),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
